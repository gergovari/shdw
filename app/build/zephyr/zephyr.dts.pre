# 0 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit_procpu.dts" 1





/dts-v1/;

# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_wrover_e_n4r8.dtsi" 1 3 4






# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 1 3 4





# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/common/mem.h" 1 3 4
# 7 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/common/freq.h" 1 3 4
# 8 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/xtensa.dtsi" 1 3 4






# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 8 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/xtensa.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  ranges;
 };
};
# 9 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 9 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/adc/adc.h" 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/dt-util.h" 1 3 4
# 19 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/dt-util.h" 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_macro.h" 1 3 4
# 34 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_macro.h" 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 1 3 4
# 18 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_loops.h" 1 3 4
# 1083 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_loops.h" 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_listify.h" 1 3 4
# 1084 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_loops.h" 2 3 4
# 19 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 162 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal_is_eq.h" 1 3 4
# 163 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 193 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal_util_inc.h" 1 3 4
# 194 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal_util_dec.h" 1 3 4
# 197 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal_util_x2.h" 1 3 4
# 200 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 35 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/sys/util_macro.h" 2 3 4
# 20 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/dt-util.h" 2 3 4
# 10 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/adc/adc.h" 2 3 4
# 10 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 11 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 12 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/clock/esp32_clock.h" 1 3 4
# 13 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/interrupt-controller/esp-xtensa-intmux.h" 1 3 4
# 14 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/pinctrl/esp32-pinctrl.h" 1 3 4
# 15 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 16 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_common.dtsi" 2 3 4

/ {
 chosen {
  zephyr,canbus = &twai;
  zephyr,entropy = &trng0;
  zephyr,flash-controller = &flash;
  zephyr,bt-hci = &esp32_bt_hci;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "espressif,xtensa-lx6";
   reg = <0>;
   cpu-power-states = <&light_sleep &deep_sleep>;
   clock-source = <1U>;
   clock-frequency = <(((240) * 1000) * 1000)>;
   xtal-freq = <(((40) * 1000) * 1000)>;
  };

  cpu1: cpu@1 {
   device_type = "cpu";
   compatible = "espressif,xtensa-lx6";
   reg = <1>;
   clock-source = <1U>;
   clock-frequency = <(((240) * 1000) * 1000)>;
   xtal-freq = <(((40) * 1000) * 1000)>;
  };

  power-states {
   light_sleep: light_sleep {
    compatible = "zephyr,power-state";
    power-state-name = "standby";
    min-residency-us = <200>;
    exit-latency-us = <60>;
   };

   deep_sleep: deep_sleep {
    compatible = "zephyr,power-state";
    power-state-name = "soft-off";
    min-residency-us = <2000>;
    exit-latency-us = <212>;
   };
  };
 };

 wifi: wifi {
  compatible = "espressif,esp32-wifi";
  status = "disabled";
 };

 esp32_bt_hci: esp32_bt_hci {
  compatible = "espressif,esp32-bt-hci";
  status = "disabled";
 };

 eth: eth {
  compatible = "espressif,esp32-eth";
  interrupts = <38 0 0>;
  interrupt-parent = <&intc>;
  clocks = <&rtc 23>;
  status = "disabled";
 };

 mdio: mdio {
  compatible = "espressif,esp32-mdio";
  clocks = <&rtc 23>;
  status = "disabled";
  #address-cells = <1>;
  #size-cells = <0>;
 };

 pinctrl: pin-controller {
  compatible = "espressif,esp32-pinctrl";
  status = "okay";
 };

 soc {
  sram0: memory@40070000 {
   compatible = "zephyr,memory-region", "mmio-sram";
   reg = <0x40070000 ((192) * 1024)>;
   zephyr,memory-region = "SRAM0";
  };

  sram1: memory@3ffe0000 {
   compatible = "zephyr,memory-region", "mmio-sram";
   reg = <0x3ffe0000 ((128) * 1024)>;
   zephyr,memory-region = "SRAM1";
  };

  sram2: memory@3ffae000 {
   compatible = "zephyr,memory-region", "mmio-sram";
   reg = <0x3ffae000 ((200) * 1024)>;
   zephyr,memory-region = "SRAM2";
  };

  ipmmem0: memory@3ffe5230 {
   compatible = "mmio-sram";
   reg = <0x3ffe5230 0x400>;
  };

  shm0: memory@3ffe5630 {
   compatible = "mmio-sram";
   reg = <0x3ffe5630 0x4000>;
  };

  ipm0: ipm@3ffe9630 {
   compatible = "espressif,esp32-ipm";
   reg = <0x3ffe9630 0x8>;
   status = "disabled";
   shared-memory = <&ipmmem0>;
   shared-memory-size = <0x400>;
   interrupts =
    <24 0 0>,
    <25 0 0>;
   interrupt-parent = <&intc>;
  };

  mbox0: mbox@3ffe9638 {
   compatible = "espressif,mbox-esp32";
   reg = <0x3ffe9638 0x8>;
   status = "disabled";
   shared-memory = <&ipmmem0>;
   shared-memory-size = <0x400>;
   interrupts =
    <24 0 0>,
    <25 0 0>;
   interrupt-parent = <&intc>;
   #mbox-cells = <1>;
  };

  intc: interrupt-controller@3ff00104 {
   #interrupt-cells = <3>;
   #address-cells = <0>;
   compatible = "espressif,esp32-intc";
   interrupt-controller;
   reg = <0x3ff00104 0x114>;
   status = "okay";
  };

  rtc: rtc@3ff48000 {
   compatible = "espressif,esp32-rtc";
   reg = <0x3ff48000 0x0D8>;
   fast-clk-src = <1>;
   slow-clk-src = <0>;
   #clock-cells = <1>;
   status = "okay";

  };

  rtc_timer: rtc_timer@3ff48004 {
   reg = <0x3ff48004 0xC>;
   compatible = "espressif,esp32-rtc-timer";
   clocks = <&rtc 34>;
   interrupts = <46 0 0>;
   interrupt-parent = <&intc>;
   status = "okay";
  };

  flash: flash-controller@3ff42000 {
   compatible = "espressif,esp32-flash-controller";
   reg = <0x3ff42000 0x1000>;
   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@0 {
    compatible = "soc-nv-flash";
    erase-block-size = <4096>;
    write-block-size = <4>;

   };
  };

  psram0: psram@3f800000 {
   device_type = "memory";
   compatible = "mmio-sram";

   reg = <0x3f800000 (((2) * 1024) * 1024)>;
   status = "disabled";
  };

  ipi0: ipi@3f4c0058 {
   compatible = "espressif,crosscore-interrupt";
   reg = <0x3f4c0058 0x4>;
   interrupts = <24 0 0>;
   interrupt-parent = <&intc>;
  };

  ipi1: ipi@3f4c005c {
   compatible = "espressif,crosscore-interrupt";
   reg = <0x3f4c005c 0x4>;
   interrupts = <25 0 0>;
   interrupt-parent = <&intc>;
  };

  uart0: uart@3ff40000 {
   compatible = "espressif,esp32-uart";
   reg = <0x3ff40000 0x400>;
   interrupts = <34 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 1>;
   status = "disabled";
  };

  uart1: uart@3ff50000 {
   compatible = "espressif,esp32-uart";
   reg = <0x3ff50000 0x400>;
   interrupts = <35 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 2>;
   status = "disabled";
  };

  uart2: uart@3ff6e000 {
   compatible = "espressif,esp32-uart";
   reg = <0x3ff6E000 0x400>;
   interrupts = <36 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 3>;
   status = "disabled";
  };

  pcnt: pcnt@3ff57000 {
   compatible = "espressif,esp32-pcnt";
   reg = <0x3ff57000 0x1000>;
   interrupts = <48 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 15>;
   status = "disabled";
  };

  ledc0: ledc@3ff59000 {
   compatible = "espressif,esp32-ledc";
   #pwm-cells = <3>;
   reg = <0x3ff59000 0x800>;
   clocks = <&rtc 0>;
   status = "disabled";
  };

  mcpwm0: mcpwm@3ff5e000 {
   compatible = "espressif,esp32-mcpwm";
   reg = <0x3ff5e000 0x1000>;
   interrupts = <39 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 10>;
   #pwm-cells = <3>;
   status = "disabled";
  };

  mcpwm1: mcpwm@3ff6c000 {
   compatible = "espressif,esp32-mcpwm";
   reg = <0x3ff6c000 0x1000>;
   interrupts = <40 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 11>;
   #pwm-cells = <3>;
   status = "disabled";
  };

  gpio: gpio {
   compatible = "simple-bus";
   gpio-map-mask = <0xffffffe0 0xffffffc0>;
   gpio-map-pass-thru = <0x1f 0x3f>;
   gpio-map = <
    0x00 0x0 &gpio0 0x0 0x0
    0x20 0x0 &gpio1 0x0 0x0
   >;
   #gpio-cells = <2>;
   #address-cells = <1>;
   #size-cells = <1>;
   ranges;

   gpio0: gpio@3ff44000 {
    compatible = "espressif,esp32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x3ff44000 0x800>;
    interrupts = <22 0 0>;
    interrupt-parent = <&intc>;





    ngpios = <32>;
   };

   gpio1: gpio@3ff44800 {
    compatible = "espressif,esp32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x3ff44800 0x800>;
    interrupts = <22 0 0>;
    interrupt-parent = <&intc>;
    ngpios = <8>;
   };
  };

  touch: touch@3ff48858 {
   compatible = "espressif,esp32-touch";
   reg = <0x3ff48858 0x38>;
   interrupts = <46 0 0>;
   interrupt-parent = <&intc>;
   status = "disabled";
  };

  i2c0: i2c@3ff53000 {
   compatible = "espressif,esp32-i2c";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x3ff53000 0x1000>;
   interrupts = <49 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 4>;
   status = "disabled";
  };

  i2c1: i2c@3ff67000 {
   compatible = "espressif,esp32-i2c";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x3ff67000 0x1000>;
   interrupts = <50 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 5>;
   status = "disabled";
  };

  trng0: trng@3ff75144 {
   compatible = "espressif,esp32-trng";
   reg = <0x3FF75144 0x4>;
   status = "disabled";
  };

  wdt0: watchdog@3ff5f048 {
   compatible = "espressif,esp32-watchdog";
   reg = <0x3ff5f048 0x20>;
   interrupts = <16 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 8>;
   status = "okay";
  };

  wdt1: watchdog@3ff60048 {
   compatible = "espressif,esp32-watchdog";
   reg = <0x3ff60048 0x20>;
   interrupts = <20 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 9>;
   status = "disabled";
  };

  spi2: spi@3ff64000 {
   compatible = "espressif,esp32-spi";
   reg = <0x3ff64000 ((4) * 1024)>;
   interrupts = <30 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 17>;
   dma-clk = <19>;
   dma-host = <0>;
   status = "disabled";
  };

  spi3: spi@3ff65000 {
   compatible = "espressif,esp32-spi";
   reg = <0x3ff65000 ((4) * 1024)>;
   interrupts = <31 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 18>;
   dma-clk = <19>;
   dma-host = <1>;
   status = "disabled";
  };

  twai: can@3ff6b000 {
   compatible = "espressif,esp32-twai";
   reg = <0x3ff6b000 ((4) * 1024)>;
   interrupts = <45 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 22>;
   status = "disabled";
  };

  timer0: counter@3ff5f000 {
   compatible = "espressif,esp32-timer";
   reg = <0x3ff5f000 ((4) * 1024)>;
   clocks = <&rtc 8>;
   group = <0>;
   index = <0>;
   interrupts = <14 0 0>;
   interrupt-parent = <&intc>;
   status = "disabled";
  };

  timer1: counter@3ff5f024 {
   compatible = "espressif,esp32-timer";
   reg = <0x3ff5f024 ((4) * 1024)>;
   clocks = <&rtc 8>;
   group = <0>;
   index = <1>;
   interrupts = <15 0 0>;
   interrupt-parent = <&intc>;
   status = "disabled";
  };

  timer2: counter@3ff60000 {
   compatible = "espressif,esp32-timer";
   reg = <0x3ff60000 ((4) * 1024)>;
   clocks = <&rtc 9>;
   group = <1>;
   index = <0>;
   interrupts = <18 0 0>;
   interrupt-parent = <&intc>;
   status = "disabled";
  };

  timer3: counter@3ff60024 {
   compatible = "espressif,esp32-timer";
   reg = <0x3ff60024 ((4) * 1024)>;
   clocks = <&rtc 9>;
   group = <1>;
   index = <1>;
   interrupts = <19 0 0>;
   interrupt-parent = <&intc>;
   status = "disabled";
  };

  dac: dac@3ff48800 {
   compatible = "espressif,esp32-dac";
   reg = <0x3ff48800 0x100>;
   interrupts = <46 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 33>;
   #io-channel-cells = <1>;
   status = "disabled";
  };

  adc0: adc@3ff48800 {
   compatible = "espressif,esp32-adc";
   reg = <0x3ff48800 10>;
   clocks = <&rtc 33>;
   unit = <1>;
   channel-count = <8>;
   #io-channel-cells = <1>;
   status = "disabled";
  };

  adc1: adc@3ff48890 {
   compatible = "espressif,esp32-adc";
   reg = <0x3ff48890 10>;
   clocks = <&rtc 33>;
   unit = <2>;
   channel-count = <10>;
   #io-channel-cells = <1>;
   status = "disabled";
  };

  sdhc: sdhc@3ff68000 {
   compatible = "espressif,esp32-sdhc";
   reg = <0x3ff68000 0x1000>;
   interrupts = <37 0 0>;
   interrupt-parent = <&intc>;
   clocks = <&rtc 20>;
   #address-cells = <1>;
   #size-cells = <0>;

   sdhc0: sdhc@0 {
    compatible = "espressif,esp32-sdhc-slot";
    reg = <0>;
    status = "disabled";
   };

   sdhc1: sdhc@1 {
    compatible = "espressif,esp32-sdhc-slot";
    reg = <1>;
    status = "disabled";
   };
  };
 };
};
# 8 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/xtensa/espressif/esp32/esp32_wrover_e_n4r8.dtsi" 2 3 4


&gpio0 {
 gpio-reserved-ranges = <6 6>, <16 2>,
   <20 1>, <24 1>, <28 4>;
};

&gpio1 {
 gpio-reserved-ranges = <5 2>;
};


&flash0 {
 reg = <0x0 (((4) * 1024) * 1024)>;
};


&psram0 {
 reg = <0x3f800000 (((8) * 1024) * 1024)>;
 status = "okay";
};
# 9 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit_procpu.dts" 2
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit-pinctrl.dtsi" 1






# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/pinctrl/esp-pinctrl-common.h" 1 3 4
# 8 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit-pinctrl.dtsi" 2

# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/pinctrl/esp32-gpio-sigmap.h" 1 3 4
# 10 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit-pinctrl.dtsi" 2

&pinctrl {

 uart0_default: uart0_default {
  group1 {
   pinmux = <(((1 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((14 & 0x1FFU) << 15U))>;
   output-high;
  };
  group2 {
   pinmux = <(((3 & 0x3FU) << 0U) | ((14 & 0x1FFU) << 6U) | ((0x1FFU & 0x1FFU) << 15U))>;
   bias-pull-up;
  };
 };

 uart1_default: uart1_default {
  group1 {
   pinmux = <(((32 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((17 & 0x1FFU) << 15U))>;
   output-high;
  };
  group2 {
   pinmux = <(((33 & 0x3FU) << 0U) | ((17 & 0x1FFU) << 6U) | ((0x1FFU & 0x1FFU) << 15U))>;
   bias-pull-up;
  };
 };

 spim2_default: spim2_default {
  group1 {
   pinmux = <(((12 & 0x3FU) << 0U) | ((9 & 0x1FFU) << 6U) | ((0x1FFU & 0x1FFU) << 15U))>,
     <(((14 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((8 & 0x1FFU) << 15U))>,
     <(((15 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((11 & 0x1FFU) << 15U))>;
  };
  group2 {
   pinmux = <(((13 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((10 & 0x1FFU) << 15U))>;
   output-low;
  };
 };

 spim3_default: spim3_default {
  group1 {
   pinmux = <(((25 & 0x3FU) << 0U) | ((64 & 0x1FFU) << 6U) | ((0x1FFU & 0x1FFU) << 15U))>,
     <(((19 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((63 & 0x1FFU) << 15U))>,
     <(((22 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((68 & 0x1FFU) << 15U))>;
  };
  group2 {
   pinmux = <(((23 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((65 & 0x1FFU) << 15U))>;
   output-low;
  };
 };

 i2c0_default: i2c0_default {
  group1 {
   pinmux = <(((21 & 0x3FU) << 0U) | ((30 & 0x1FFU) << 6U) | ((30 & 0x1FFU) << 15U))>,
     <(((22 & 0x3FU) << 0U) | ((29 & 0x1FFU) << 6U) | ((29 & 0x1FFU) << 15U))>;
   bias-pull-up;
   drive-open-drain;
   output-high;
  };
 };

 ledc0_default: ledc0_default {
  group1 {
   pinmux = <(((0 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((79 & 0x1FFU) << 15U))>,
     <(((2 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((80 & 0x1FFU) << 15U))>,
     <(((4 & 0x3FU) << 0U) | ((0x1FFU & 0x1FFU) << 6U) | ((81 & 0x1FFU) << 15U))>;
   output-enable;
  };
 };

 sdhc0_default: sdhc0_default {
  group1 {
   pinmux = <(((21 & 0x3FU) << 0U) | ((98 & 0x1FFU) << 6U) | ((0x1FFU & 0x1FFU) << 15U))>;
   bias-pull-up;
   output-high;
  };
 };
};
# 10 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit_procpu.dts" 2
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/common/espressif/partitions_0x1000_amp.dtsi" 1 3 4






# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/common/espressif/partitions_0x1000_amp_4M.dtsi" 1 3 4






&flash0 {
 partitions {
  compatible = "fixed-partitions";
  #address-cells = <1>;
  #size-cells = <1>;

  boot_partition: partition@1000 {
   label = "mcuboot";
   reg = <0x1000 ((124) * 1024)>;
  };

  slot0_partition: partition@20000 {
   label = "image-0";
   reg = <0x20000 ((1344) * 1024)>;
  };

  slot1_partition: partition@170000 {
   label = "image-1";
   reg = <0x170000 ((1344) * 1024)>;
  };

  slot0_appcpu_partition: partition@2c0000 {
   label = "image-0-appcpu";
   reg = <0x2C0000 ((448) * 1024)>;
  };

  slot1_appcpu_partition: partition@330000 {
   label = "image-1-appcpu";
   reg = <0x330000 ((448) * 1024)>;
  };

  slot0_lpcore_partition: partition@3a0000 {
   label = "image-0-lpcore";
   reg = <0x3A0000 ((32) * 1024)>;
  };

  slot1_lpcore_partition: partition@3a8000 {
   label = "image-1-lpcore";
   reg = <0x3A8000 ((32) * 1024)>;
  };

  storage_partition: partition@3b0000 {
   label = "storage";
   reg = <0x3B0000 ((192) * 1024)>;
  };

  scratch_partition: partition@3e0000 {
   label = "image-scratch";
   reg = <0x3E0000 ((124) * 1024)>;
  };

  coredump_partition: partition@3ff000 {
   label = "coredump";
   reg = <0x3FF000 ((4) * 1024)>;
  };
 };
};
# 8 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/dts/common/espressif/partitions_0x1000_amp.dtsi" 2 3 4
# 11 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit_procpu.dts" 2

/ {
 model = "Espressif ESP32-Wrover-Kit PROCPU";
 compatible = "espressif,esp32";

 aliases {
  led0 = &blue_led;
  led1 = &green_led;
  led2 = &red_led;
  pwm-led0 = &pwm_led_red;
  pwm-led1 = &pwm_led_green;
  pwm-led2 = &pwm_led_blue;
  red-pwm-led = &pwm_led_red;
  green-pwm-led = &pwm_led_green;
  blue-pwm-led = &pwm_led_blue;
  uart-0 = &uart0;
  i2c-0 = &i2c0;
  watchdog0 = &wdt0;
  sdhc0 = &sdhc1;
 };

 chosen {
  zephyr,sram = &sram1;
  zephyr,console = &uart0;
  zephyr,shell-uart = &uart0;
  zephyr,flash = &flash0;
  zephyr,code-partition = &slot0_partition;

  zephyr,sdhc = &sdhc1;
  zephyr,bt-hci = &esp32_bt_hci;
 };

 leds {
  compatible = "gpio-leds";

  blue_led: led_0 {
   gpios = <&gpio0 4 (0 << 0)>;
   label = "Blue - LED0";
  };

  green_led: led_1 {
   gpios = <&gpio0 2 (0 << 0)>;
   label = "Green - LED1";
  };

  red_led: led_2 {
   gpios = <&gpio0 0 (0 << 0)>;
   label = "Red - LED2";
  };
 };

 pwmleds {
  compatible = "pwm-leds";
  pwm_led_red: pwm_led_0 {
   label = "Red PWM LED";
   pwms = <&ledc0 0 (((((1UL) * 1000UL) * 1000UL) * 1000UL) / (100)) (0 << 0)>;
  };
  pwm_led_green: pwm_led_1 {
   label = "Green PWM LED";
   pwms = <&ledc0 1 (((((1UL) * 1000UL) * 1000UL) * 1000UL) / (100)) (0 << 0)>;
  };
  pwm_led_blue: pwm_led_2 {
   label = "Blue PWM LED";
   pwms = <&ledc0 2 (((((1UL) * 1000UL) * 1000UL) * 1000UL) / (100)) (0 << 0)>;
  };
 };
# 97 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/boards/espressif/esp_wrover_kit/esp_wrover_kit_procpu.dts"
};

&uart0 {
 status = "okay";
 current-speed = <115200>;
 pinctrl-0 = <&uart0_default>;
 pinctrl-names = "default";
};

&uart1 {
 status = "disabled";
 current-speed = <115200>;
 pinctrl-0 = <&uart1_default>;
 pinctrl-names = "default";
};

&gpio0 {
 status = "okay";


 lcd-backlight {
  gpio-hog;
  gpios = <5 (0 << 0)>;
  output-low;
 };
};

&gpio1 {
 status = "okay";
};

&i2c0 {
 status = "okay";
 clock-frequency = <100000>;
 sda-gpios = <&gpio0 21 ((1 << 1) | (1 << 2))>;
 scl-gpios = <&gpio0 22 ((1 << 1) | (1 << 2))>;
 pinctrl-0 = <&i2c0_default>;
 pinctrl-names = "default";
};

&spi2 {
 #address-cells = <1>;
 #size-cells = <0>;
 status = "okay";
 pinctrl-0 = <&spim2_default>;
 pinctrl-names = "default";
};

&spi3 {
 #address-cells = <1>;
 #size-cells = <0>;
 status = "okay";
 pinctrl-0 = <&spim3_default>;
 pinctrl-names = "default";
};

&ledc0 {
 pinctrl-0 = <&ledc0_default>;
 pinctrl-names = "default";
 status = "okay";
 #address-cells = <1>;
 #size-cells = <0>;
 channel0@0 {
  reg = <0x0>;
  timer = <0>;
 };
 channel1@1 {
  reg = <0x1>;
  timer = <1>;
 };
 channel2@2 {
  reg = <0x2>;
  timer = <2>;
 };
};

&timer0 {
 status = "okay";
};

&timer1 {
 status = "okay";
};

&timer2 {
 status = "okay";
};

&timer3 {
 status = "okay";
};

&trng0 {
 status = "okay";
};

&sdhc {
 sdhc1: sdhc@1 {
  status = "okay";

  pinctrl-0 = <&sdhc0_default>;
  pinctrl-names = "default";
  power-delay-ms = <100>;
  max-bus-freq = <52000000>;
  bus-width = <4>;

  clk-pin = <14>;
  cmd-pin = <15>;
  d0-pin = <2>;
  d1-pin = <4>;
  d2-pin = <12>;
  d3-pin = <13>;

  mmc {
   compatible = "zephyr,sdmmc-disk";
   disk-name = "SD";
   status = "okay";
  };
 };
};

&esp32_bt_hci {
 status = "okay";
};
# 0 "<command-line>" 2
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/shdw/app/boards/esp_wrover_kit_procpu.overlay" 1
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/include/zephyr/dt-bindings/display/panel.h" 1 3 4
# 2 "/home/oJis/Documents/projects/zephyr/shd/shd/shdw/app/boards/esp_wrover_kit_procpu.overlay" 2

/ {
 chosen {
  zephyr,display = &gc9a01;

 };
# 24 "/home/oJis/Documents/projects/zephyr/shd/shd/shdw/app/boards/esp_wrover_kit_procpu.overlay"
 mipi_dbi {
  compatible = "zephyr,mipi-dbi-spi";
  dc-gpios = <&gpio0 21 (0 << 0)>;
  reset-gpios = <&gpio0 18 (1 << 0)>;
  spi-dev = <&spi3>;
  write-only;
  #address-cells = <1>;
  #size-cells = <0>;

  gc9a01: gc9a01@0 {
   status = "okay";
   compatible = "galaxycore,gc9x01x";
   reg = <0>;
   mipi-max-frequency = <25000000>;
   pixel-format = <(0x1 << 4)>;
   display-inversion;
   width = <240>;
   height = <240>;
  };
 };
};
# 0 "<command-line>" 2
# 1 "/home/oJis/Documents/projects/zephyr/shd/shd/zephyr/misc/empty_file.c"
